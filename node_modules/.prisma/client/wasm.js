
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phone: 'phone',
  password: 'password',
  role: 'role'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  logoUrl: 'logoUrl',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  companyId: 'companyId'
};

exports.Prisma.SalesManagerScalarFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.PlumberScalarFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.AccountantScalarFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.DistributorScalarFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.FieldExecutiveScalarFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.WorkerScalarFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  stockQuantity: 'stockQuantity',
  warrantyPeriodInMonths: 'warrantyPeriodInMonths',
  categoryId: 'categoryId'
};

exports.Prisma.StockScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  status: 'status',
  location: 'location'
};

exports.Prisma.WarrantyCardScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  serialNumber: 'serialNumber',
  purchaseDate: 'purchaseDate',
  expiryDate: 'expiryDate',
  scanQR: 'scanQR',
  validViaWarranIQ: 'validViaWarranIQ'
};

exports.Prisma.AttendanceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  date: 'date',
  checkIn: 'checkIn',
  checkOut: 'checkOut'
};

exports.Prisma.CustomerFollowUpScalarFieldEnum = {
  id: 'id',
  executiveId: 'executiveId',
  customerName: 'customerName',
  contactDetails: 'contactDetails',
  feedback: 'feedback',
  status: 'status',
  nextFollowUpDate: 'nextFollowUpDate'
};

exports.Prisma.PointTransactionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  points: 'points',
  creditAmount: 'creditAmount',
  date: 'date',
  reason: 'reason',
  type: 'type'
};

exports.Prisma.IncentiveScalarFieldEnum = {
  id: 'id',
  description: 'description',
  points: 'points',
  assignedId: 'assignedId',
  assignedAt: 'assignedAt'
};

exports.Prisma.DVRScalarFieldEnum = {
  id: 'id',
  executiveId: 'executiveId',
  feedback: 'feedback',
  location: 'location'
};

exports.Prisma.DeliveryReportScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  product: 'product',
  quantity: 'quantity',
  isForecasted: 'isForecasted',
  qrRequested: 'qrRequested',
  submittedAt: 'submittedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  status: 'status',
  orderDate: 'orderDate',
  promoCodeId: 'promoCodeId'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  productId: 'productId',
  quantity: 'quantity',
  unitPrice: 'unitPrice'
};

exports.Prisma.InvoiceScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  invoiceDate: 'invoiceDate',
  totalAmount: 'totalAmount',
  pdfUrl: 'pdfUrl',
  status: 'status',
  sentAt: 'sentAt',
  paidAt: 'paidAt',
  dueDate: 'dueDate'
};

exports.Prisma.LiveLocationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  latitude: 'latitude',
  longitude: 'longitude',
  timeStamp: 'timeStamp'
};

exports.Prisma.ShiftAlertScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  message: 'message',
  createdAt: 'createdAt',
  acknowledged: 'acknowledged'
};

exports.Prisma.RegisterWarrantyScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  serialNumber: 'serialNumber',
  purchaseDate: 'purchaseDate',
  warrantyMonths: 'warrantyMonths',
  sellerId: 'sellerId',
  registeredAt: 'registeredAt',
  qrImage: 'qrImage'
};

exports.Prisma.PostDeliveryReportScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  product: 'product',
  quantity: 'quantity',
  submittedAt: 'submittedAt'
};

exports.Prisma.CommissionedWorkScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  latitude: 'latitude',
  longitude: 'longitude',
  qrCode: 'qrCode',
  qrImage: 'qrImage',
  appliedAt: 'appliedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CartScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  cartId: 'cartId',
  productId: 'productId',
  quantity: 'quantity',
  addedAt: 'addedAt'
};

exports.Prisma.PromoCodeScalarFieldEnum = {
  id: 'id',
  code: 'code',
  description: 'description',
  discountType: 'discountType',
  discountValue: 'discountValue',
  minOrderAmount: 'minOrderAmount',
  maxDiscount: 'maxDiscount',
  usageLimit: 'usageLimit',
  usedCount: 'usedCount',
  status: 'status',
  validFrom: 'validFrom',
  validUntil: 'validUntil',
  createdAt: 'createdAt'
};

exports.Prisma.AuditScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  resource: 'resource',
  details: 'details',
  timestamp: 'timestamp'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  message: 'message',
  userId: 'userId',
  isRead: 'isRead',
  createdAt: 'createdAt'
};

exports.Prisma.FinancialLogScalarFieldEnum = {
  id: 'id',
  type: 'type',
  amount: 'amount',
  description: 'description',
  category: 'category',
  reference: 'reference',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.UserRole = exports.$Enums.UserRole = {
  Admin: 'Admin',
  SalesManager: 'SalesManager',
  Plumber: 'Plumber',
  Accountant: 'Accountant',
  Distributor: 'Distributor',
  FieldExecutive: 'FieldExecutive',
  Worker: 'Worker'
};

exports.StockStatus = exports.$Enums.StockStatus = {
  Available: 'Available',
  Moved: 'Moved',
  Missing: 'Missing'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  Pending: 'Pending',
  Completed: 'Completed',
  Cancelled: 'Cancelled'
};

exports.FollowUpStatus = exports.$Enums.FollowUpStatus = {
  Pending: 'Pending',
  Completed: 'Completed',
  Postponed: 'Postponed'
};

exports.TransactionType = exports.$Enums.TransactionType = {
  Earned: 'Earned',
  Claimed: 'Claimed',
  Adjusted: 'Adjusted'
};

exports.CartStatus = exports.$Enums.CartStatus = {
  Active: 'Active',
  CheckedOut: 'CheckedOut',
  Abandoned: 'Abandoned'
};

exports.PromoCodeStatus = exports.$Enums.PromoCodeStatus = {
  Active: 'Active',
  Inactive: 'Inactive',
  Expired: 'Expired'
};

exports.InvoiceStatus = exports.$Enums.InvoiceStatus = {
  Draft: 'Draft',
  Sent: 'Sent',
  Paid: 'Paid',
  Overdue: 'Overdue',
  Cancelled: 'Cancelled'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  Info: 'Info',
  Alert: 'Alert',
  Promo: 'Promo',
  System: 'System'
};

exports.FinancialLogType = exports.$Enums.FinancialLogType = {
  Income: 'Income',
  Expense: 'Expense',
  Transfer: 'Transfer',
  Adjustment: 'Adjustment'
};

exports.Prisma.ModelName = {
  User: 'User',
  Company: 'Company',
  Admin: 'Admin',
  SalesManager: 'SalesManager',
  Plumber: 'Plumber',
  Accountant: 'Accountant',
  Distributor: 'Distributor',
  FieldExecutive: 'FieldExecutive',
  Worker: 'Worker',
  Product: 'Product',
  Stock: 'Stock',
  WarrantyCard: 'WarrantyCard',
  Attendance: 'Attendance',
  CustomerFollowUp: 'CustomerFollowUp',
  PointTransaction: 'PointTransaction',
  Incentive: 'Incentive',
  DVR: 'DVR',
  DeliveryReport: 'DeliveryReport',
  Order: 'Order',
  OrderItem: 'OrderItem',
  Invoice: 'Invoice',
  LiveLocation: 'LiveLocation',
  ShiftAlert: 'ShiftAlert',
  RegisterWarranty: 'RegisterWarranty',
  PostDeliveryReport: 'PostDeliveryReport',
  CommissionedWork: 'CommissionedWork',
  Category: 'Category',
  Cart: 'Cart',
  CartItem: 'CartItem',
  PromoCode: 'PromoCode',
  Audit: 'Audit',
  Notification: 'Notification',
  FinancialLog: 'FinancialLog'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/surma/Development/Projects/frontman/back-end/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/surma/Development/Projects/frontman/back-end/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mongodb",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Prisma schema for MongoDB\n// All id fields fixed with @db.ObjectId\n// All relation fields fixed\n// All types corrected for Prisma MongoDB compatibility\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mongodb\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum UserRole {\n  Admin\n  SalesManager\n  Plumber\n  Accountant\n  Distributor\n  FieldExecutive\n  Worker\n}\n\nenum StockStatus {\n  Available\n  Moved\n  Missing\n}\n\nenum OrderStatus {\n  Pending\n  Completed\n  Cancelled\n}\n\nenum FollowUpStatus {\n  Pending\n  Completed\n  Postponed\n}\n\nenum TransactionType {\n  Earned\n  Claimed\n  Adjusted\n}\n\nenum CartStatus {\n  Active\n  CheckedOut\n  Abandoned\n}\n\nenum PromoCodeStatus {\n  Active\n  Inactive\n  Expired\n}\n\nenum InvoiceStatus {\n  Draft\n  Sent\n  Paid\n  Overdue\n  Cancelled\n}\n\nenum NotificationType {\n  Info\n  Alert\n  Promo\n  System\n}\n\nmodel User {\n  id       String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name     String\n  email    String   @unique\n  phone    String\n  password String\n  role     UserRole\n\n  admin          Admin?\n  salesManager   SalesManager?\n  plumber        Plumber?\n  accountant     Accountant?\n  distributor    Distributor?\n  fieldExecutive FieldExecutive?\n  worker         Worker?\n\n  attendances          Attendance[]\n  transactions         PointTransaction[]\n  incentives           Incentive[]          @relation(\"IncentiveAssigned\")\n  deliveryReports      DeliveryReport[]\n  orders               Order[]\n  liveLocations        LiveLocation[]\n  ShiftAlert           ShiftAlert[]\n  registeredWarranties RegisterWarranty[]\n  postDeliveryReports  PostDeliveryReport[]\n  commissionedWorks    CommissionedWork[]\n  carts                Cart[]\n  audits               Audit[]\n  notifications        Notification[]\n  financialLogs        FinancialLog[]\n}\n\nmodel Company {\n  id          String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name        String   @unique\n  description String?\n  logoUrl     String?\n  isActive    Boolean  @default(true)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  admins Admin[]\n}\n\nmodel Admin {\n  id        String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId    String   @unique @db.ObjectId\n  companyId String?  @db.ObjectId\n  user      User     @relation(fields: [userId], references: [id])\n  company   Company? @relation(fields: [companyId], references: [id])\n}\n\nmodel SalesManager {\n  id     String @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId String @unique @db.ObjectId\n  user   User   @relation(fields: [userId], references: [id])\n}\n\nmodel Plumber {\n  id     String @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId String @unique @db.ObjectId\n  user   User   @relation(fields: [userId], references: [id])\n}\n\nmodel Accountant {\n  id     String @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId String @unique @db.ObjectId\n  user   User   @relation(fields: [userId], references: [id])\n}\n\nmodel Distributor {\n  id     String @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId String @unique @db.ObjectId\n  user   User   @relation(fields: [userId], references: [id])\n}\n\nmodel FieldExecutive {\n  id         String             @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId     String             @unique @db.ObjectId\n  user       User               @relation(fields: [userId], references: [id])\n  followUps  CustomerFollowUp[]\n  dvrReports DVR[]\n}\n\nmodel Worker {\n  id     String @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId String @unique @db.ObjectId\n  user   User   @relation(fields: [userId], references: [id])\n}\n\nmodel Product {\n  id                     String  @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name                   String\n  price                  Float\n  stockQuantity          Int\n  warrantyPeriodInMonths Int\n  categoryId             String? @db.ObjectId\n\n  stocks               Stock[]\n  warrantyCards        WarrantyCard[]\n  orderItems           OrderItem[]\n  registeredWarranties RegisterWarranty[]\n  cartItems            CartItem[]\n  category             Category?          @relation(fields: [categoryId], references: [id])\n}\n\nmodel Stock {\n  id        String      @id @default(auto()) @map(\"_id\") @db.ObjectId\n  productId String      @db.ObjectId\n  status    StockStatus\n  location  String\n\n  product Product @relation(fields: [productId], references: [id])\n}\n\nmodel WarrantyCard {\n  id               String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  productId        String   @db.ObjectId\n  serialNumber     String\n  purchaseDate     DateTime\n  expiryDate       DateTime\n  scanQR           String\n  validViaWarranIQ String\n\n  product Product @relation(fields: [productId], references: [id])\n}\n\nmodel Attendance {\n  id       String    @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId   String    @db.ObjectId\n  date     DateTime\n  checkIn  DateTime\n  checkOut DateTime?\n\n  user User @relation(fields: [userId], references: [id])\n}\n\nmodel CustomerFollowUp {\n  id               String         @id @default(auto()) @map(\"_id\") @db.ObjectId\n  executiveId      String         @db.ObjectId\n  customerName     String\n  contactDetails   String\n  feedback         String\n  status           FollowUpStatus\n  nextFollowUpDate DateTime\n\n  executive FieldExecutive @relation(fields: [executiveId], references: [id])\n}\n\nmodel PointTransaction {\n  id           String          @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId       String          @db.ObjectId\n  points       Int\n  creditAmount Float\n  date         DateTime\n  reason       String\n  type         TransactionType\n\n  user User @relation(fields: [userId], references: [id])\n}\n\nmodel Incentive {\n  id          String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  description String\n  points      Int\n  assignedId  String   @db.ObjectId\n  assignedAt  DateTime\n\n  assignedTo User @relation(\"IncentiveAssigned\", fields: [assignedId], references: [id])\n}\n\nmodel DVR {\n  id          String @id @default(auto()) @map(\"_id\") @db.ObjectId\n  executiveId String @db.ObjectId\n  feedback    String\n  location    String\n\n  executive FieldExecutive @relation(fields: [executiveId], references: [id])\n}\n\nmodel DeliveryReport {\n  id           String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId       String   @db.ObjectId\n  product      String\n  quantity     Int\n  isForecasted Boolean\n  qrRequested  Boolean  @default(false)\n  submittedAt  DateTime\n\n  user User @relation(fields: [userId], references: [id])\n}\n\nmodel Order {\n  id          String      @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId      String      @db.ObjectId\n  status      OrderStatus\n  orderDate   DateTime\n  promoCodeId String?     @db.ObjectId\n  orderItems  OrderItem[]\n  invoice     Invoice?\n\n  user      User       @relation(fields: [userId], references: [id])\n  promoCode PromoCode? @relation(fields: [promoCodeId], references: [id])\n}\n\nmodel OrderItem {\n  id        String @id @default(auto()) @map(\"_id\") @db.ObjectId\n  orderId   String @db.ObjectId\n  productId String @db.ObjectId\n  quantity  Int\n  unitPrice Float\n\n  order   Order   @relation(fields: [orderId], references: [id])\n  product Product @relation(fields: [productId], references: [id])\n}\n\nmodel Invoice {\n  id          String        @id @default(auto()) @map(\"_id\") @db.ObjectId\n  orderId     String        @unique @db.ObjectId\n  invoiceDate DateTime\n  totalAmount Float\n  pdfUrl      String\n  status      InvoiceStatus @default(Draft)\n  sentAt      DateTime?\n  paidAt      DateTime?\n  dueDate     DateTime?\n\n  order Order @relation(fields: [orderId], references: [id])\n}\n\nmodel LiveLocation {\n  id        String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId    String   @db.ObjectId\n  latitude  Float\n  longitude Float\n  timeStamp DateTime\n\n  user User @relation(fields: [userId], references: [id])\n}\n\nmodel ShiftAlert {\n  id           String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId       String   @db.ObjectId\n  message      String\n  createdAt    DateTime @default(now())\n  acknowledged Boolean  @default(false)\n\n  user User @relation(fields: [userId], references: [id])\n}\n\nmodel RegisterWarranty {\n  id             String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  productId      String   @db.ObjectId\n  serialNumber   String   @unique\n  purchaseDate   DateTime\n  warrantyMonths Int\n  sellerId       String   @db.ObjectId\n  registeredAt   DateTime @default(now())\n  qrImage        String?\n  product        Product  @relation(fields: [productId], references: [id])\n  seller         User     @relation(fields: [sellerId], references: [id])\n}\n\nmodel PostDeliveryReport {\n  id          String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId      String   @db.ObjectId\n  product     String\n  quantity    Int\n  submittedAt DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id])\n}\n\nmodel CommissionedWork {\n  id        String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId    String   @db.ObjectId\n  latitude  Float\n  longitude Float\n  qrCode    String // JSON string or QR code data\n  qrImage   Bytes // BSON Binary for storing QR code image\n  appliedAt DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id])\n}\n\nmodel Category {\n  id          String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  name        String   @unique\n  description String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  products Product[]\n}\n\nmodel Cart {\n  id        String     @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId    String     @unique @db.ObjectId\n  status    CartStatus @default(Active)\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n\n  user  User       @relation(fields: [userId], references: [id])\n  items CartItem[]\n}\n\nmodel CartItem {\n  id        String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  cartId    String   @db.ObjectId\n  productId String   @db.ObjectId\n  quantity  Int\n  addedAt   DateTime @default(now())\n\n  cart    Cart    @relation(fields: [cartId], references: [id])\n  product Product @relation(fields: [productId], references: [id])\n}\n\nmodel PromoCode {\n  id             String          @id @default(auto()) @map(\"_id\") @db.ObjectId\n  code           String          @unique\n  description    String\n  discountType   String // \"percentage\" or \"fixed\"\n  discountValue  Float\n  minOrderAmount Float?\n  maxDiscount    Float?\n  usageLimit     Int?\n  usedCount      Int             @default(0)\n  status         PromoCodeStatus @default(Active)\n  validFrom      DateTime\n  validUntil     DateTime\n  createdAt      DateTime        @default(now())\n\n  orders Order[]\n}\n\nmodel Audit {\n  id        String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  userId    String   @db.ObjectId\n  user      User     @relation(fields: [userId], references: [id])\n  action    String\n  resource  String?\n  details   String?\n  timestamp DateTime @default(now())\n\n  @@index([userId, action, timestamp])\n}\n\nmodel Notification {\n  id        String   @id @default(auto()) @map(\"_id\") @db.ObjectId\n  type      String\n  message   String\n  userId    String?  @db.ObjectId\n  user      User?    @relation(fields: [userId], references: [id])\n  isRead    Boolean  @default(false)\n  createdAt DateTime @default(now())\n\n  @@index([userId, isRead])\n}\n\nenum FinancialLogType {\n  Income\n  Expense\n  Transfer\n  Adjustment\n}\n\nmodel FinancialLog {\n  id          String           @id @default(auto()) @map(\"_id\") @db.ObjectId\n  type        FinancialLogType\n  amount      Float\n  description String\n  category    String?\n  reference   String? // Reference to order, invoice, or other related entity\n  createdBy   String           @db.ObjectId\n  createdAt   DateTime         @default(now())\n  updatedAt   DateTime         @updatedAt\n\n  createdByUser User @relation(fields: [createdBy], references: [id])\n\n  @@index([type, createdAt])\n  @@index([createdBy, createdAt])\n}\n",
  "inlineSchemaHash": "7d1e772895a4e23998e25c9423bbebf7307cf3b30a9a264196b59cf6eeb8e0cb",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToUser\"},{\"name\":\"salesManager\",\"kind\":\"object\",\"type\":\"SalesManager\",\"relationName\":\"SalesManagerToUser\"},{\"name\":\"plumber\",\"kind\":\"object\",\"type\":\"Plumber\",\"relationName\":\"PlumberToUser\"},{\"name\":\"accountant\",\"kind\":\"object\",\"type\":\"Accountant\",\"relationName\":\"AccountantToUser\"},{\"name\":\"distributor\",\"kind\":\"object\",\"type\":\"Distributor\",\"relationName\":\"DistributorToUser\"},{\"name\":\"fieldExecutive\",\"kind\":\"object\",\"type\":\"FieldExecutive\",\"relationName\":\"FieldExecutiveToUser\"},{\"name\":\"worker\",\"kind\":\"object\",\"type\":\"Worker\",\"relationName\":\"UserToWorker\"},{\"name\":\"attendances\",\"kind\":\"object\",\"type\":\"Attendance\",\"relationName\":\"AttendanceToUser\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"PointTransaction\",\"relationName\":\"PointTransactionToUser\"},{\"name\":\"incentives\",\"kind\":\"object\",\"type\":\"Incentive\",\"relationName\":\"IncentiveAssigned\"},{\"name\":\"deliveryReports\",\"kind\":\"object\",\"type\":\"DeliveryReport\",\"relationName\":\"DeliveryReportToUser\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"},{\"name\":\"liveLocations\",\"kind\":\"object\",\"type\":\"LiveLocation\",\"relationName\":\"LiveLocationToUser\"},{\"name\":\"ShiftAlert\",\"kind\":\"object\",\"type\":\"ShiftAlert\",\"relationName\":\"ShiftAlertToUser\"},{\"name\":\"registeredWarranties\",\"kind\":\"object\",\"type\":\"RegisterWarranty\",\"relationName\":\"RegisterWarrantyToUser\"},{\"name\":\"postDeliveryReports\",\"kind\":\"object\",\"type\":\"PostDeliveryReport\",\"relationName\":\"PostDeliveryReportToUser\"},{\"name\":\"commissionedWorks\",\"kind\":\"object\",\"type\":\"CommissionedWork\",\"relationName\":\"CommissionedWorkToUser\"},{\"name\":\"carts\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToUser\"},{\"name\":\"audits\",\"kind\":\"object\",\"type\":\"Audit\",\"relationName\":\"AuditToUser\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"financialLogs\",\"kind\":\"object\",\"type\":\"FinancialLog\",\"relationName\":\"FinancialLogToUser\"}],\"dbName\":null},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"admins\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToCompany\"}],\"dbName\":null},\"Admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdminToUser\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"AdminToCompany\"}],\"dbName\":null},\"SalesManager\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SalesManagerToUser\"}],\"dbName\":null},\"Plumber\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PlumberToUser\"}],\"dbName\":null},\"Accountant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountantToUser\"}],\"dbName\":null},\"Distributor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DistributorToUser\"}],\"dbName\":null},\"FieldExecutive\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FieldExecutiveToUser\"},{\"name\":\"followUps\",\"kind\":\"object\",\"type\":\"CustomerFollowUp\",\"relationName\":\"CustomerFollowUpToFieldExecutive\"},{\"name\":\"dvrReports\",\"kind\":\"object\",\"type\":\"DVR\",\"relationName\":\"DVRToFieldExecutive\"}],\"dbName\":null},\"Worker\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWorker\"}],\"dbName\":null},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"stockQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"warrantyPeriodInMonths\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stocks\",\"kind\":\"object\",\"type\":\"Stock\",\"relationName\":\"ProductToStock\"},{\"name\":\"warrantyCards\",\"kind\":\"object\",\"type\":\"WarrantyCard\",\"relationName\":\"ProductToWarrantyCard\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"registeredWarranties\",\"kind\":\"object\",\"type\":\"RegisterWarranty\",\"relationName\":\"ProductToRegisterWarranty\"},{\"name\":\"cartItems\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToProduct\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToProduct\"}],\"dbName\":null},\"Stock\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"StockStatus\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToStock\"}],\"dbName\":null},\"WarrantyCard\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serialNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchaseDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scanQR\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"validViaWarranIQ\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToWarrantyCard\"}],\"dbName\":null},\"Attendance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"checkIn\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"checkOut\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AttendanceToUser\"}],\"dbName\":null},\"CustomerFollowUp\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"executiveId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactDetails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feedback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FollowUpStatus\"},{\"name\":\"nextFollowUpDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"executive\",\"kind\":\"object\",\"type\":\"FieldExecutive\",\"relationName\":\"CustomerFollowUpToFieldExecutive\"}],\"dbName\":null},\"PointTransaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"TransactionType\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PointTransactionToUser\"}],\"dbName\":null},\"Incentive\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"assignedId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"assignedTo\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"IncentiveAssigned\"}],\"dbName\":null},\"DVR\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"executiveId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feedback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"executive\",\"kind\":\"object\",\"type\":\"FieldExecutive\",\"relationName\":\"DVRToFieldExecutive\"}],\"dbName\":null},\"DeliveryReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isForecasted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"qrRequested\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"submittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DeliveryReportToUser\"}],\"dbName\":null},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"orderDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"promoCodeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"invoice\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToOrder\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"},{\"name\":\"promoCode\",\"kind\":\"object\",\"type\":\"PromoCode\",\"relationName\":\"OrderToPromoCode\"}],\"dbName\":null},\"OrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrderItemToProduct\"}],\"dbName\":null},\"Invoice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoiceDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"pdfUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InvoiceStatus\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"paidAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"InvoiceToOrder\"}],\"dbName\":null},\"LiveLocation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"timeStamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LiveLocationToUser\"}],\"dbName\":null},\"ShiftAlert\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"acknowledged\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ShiftAlertToUser\"}],\"dbName\":null},\"RegisterWarranty\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serialNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchaseDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"warrantyMonths\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sellerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"registeredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"qrImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToRegisterWarranty\"},{\"name\":\"seller\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RegisterWarrantyToUser\"}],\"dbName\":null},\"PostDeliveryReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"submittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostDeliveryReportToUser\"}],\"dbName\":null},\"CommissionedWork\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"qrCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qrImage\",\"kind\":\"scalar\",\"type\":\"Bytes\"},{\"name\":\"appliedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommissionedWorkToUser\"}],\"dbName\":null},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CategoryToProduct\"}],\"dbName\":null},\"Cart\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"CartStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CartToUser\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartToCartItem\"}],\"dbName\":null},\"CartItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"cartId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"addedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToCartItem\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CartItemToProduct\"}],\"dbName\":null},\"PromoCode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountValue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"minOrderAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"maxDiscount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"usageLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"usedCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PromoCodeStatus\"},{\"name\":\"validFrom\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"validUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToPromoCode\"}],\"dbName\":null},\"Audit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditToUser\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"FinancialLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"_id\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"FinancialLogType\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FinancialLogToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

